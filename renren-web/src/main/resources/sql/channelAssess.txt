select 
-- COUNT(distinct CHANNELHEAD) AS CHANNELHEAD,
-- COUNT(distinct CHANNELNAME) AS CHANNELNAME,
-- COUNT(distinct CHANNELLABEL) AS CHANNELLABEL,
'汇总' as CHANNELHEAD,
'' as CHANNELNAME,
'' as CHANNELLABEL,
SUM(REGISTERED) AS REGISTERED,
SUM(CGNUM) AS CGNUM,
SUM(CZNUM) AS CZNUM,
SUM(CZMONEY) AS CZMONEY,
SUM(TXMONEY) AS TXMONEY,
SUM(CTMONEY) AS CTMONEY,
SUM(SHOUTOU) AS SHOUTOU,
SUM(INVESTNUM) AS INVESTNUM,
SUM(INVESTMONEY) AS INVESTMONEY,

null AS AVGP,
SUM(ZHMONEY) AS ZHMONEY,
SUM(DSMONEY) AS DSMONEY,
SUM(DSLSNUM) AS DSLSNUM,
null AS INVESTLS,
null AS ZICHAN,
null AS CHONGZHI,
null AS TIMER
from (

with tmp_user as(
  select 
    ub.activity_tag,
    count(1) as reg_num  --注册人数
  from  edw_user_basic ub  
  where to_char(register_time,'yyyymmdd') between '${stat_time}' and '${end_time}'
    and activity_tag is not null 
  group by ub.activity_tag 
  
),

auth as(
  select
    activity_tag ,
    count(user_id) as auth_num  --实名人数
  from edw_user_basic ub 
  where to_char(least( nvl(ub.NORMAL_auth_TIME,sysdate) , nvl(ub.DEPOSITORY_auth_TIME,sysdate)),'yyyymmdd')
    between '${stat_time}' and '${stat_time}'
    and activity_tag is not null
  group by activity_tag 
),

--  round(least( nvl(ub.NORMAL_FIRSTINVEST_TIME,sysdate) , nvl(ub.DEPOSITORY_FIRSTINVEST_TIME,sysdate)) -
--    ub.register_time,0) as jushoutou, --注册后距首投时间

recharge as(
  select
    ub.activity_tag,
    count(distinct(ub.user_id)) as re_num, --充值人数
    round(sum(amount)/10000,2) as re_amount --充值金额
  from edw_user_basic ub 
    left join edw_money_acc_recharge ar on ar.user_id = ub.user_id
  where DEDUCT_STATUS in (20,10)
    and to_char(DEDUCT_TIME_YES,'yyyymmdd') between '${stat_time}' and '${end_time}'
    and activity_tag is not null
  group by  ub.activity_tag  
),

withdraw as(
  select
    activity_tag,
    round(sum(amount)/10000,2) as wi_amount --提现金额
  from edw_user_basic ub
    left join edw_money_acc_withdraw ar on ar.user_id = ub.user_id
  where DEDUCT_STATUS in (20,10)
    and to_char(DEDUCT_TIME_YES,'yyyymmdd') between '${stat_time}' and '${end_time}'
    and activity_tag is not null
  group by  ub.activity_tag  
),

first_inv as(
  select 
    ub.activity_tag,
    count(user_id) as first_inv_num  --首投人数
  from  edw_user_basic ub  
  where to_char(firstinvest_time,'yyyymmdd') between '${stat_time}' and '${end_time}'
    and activity_tag is not null
  group by ub.activity_tag 
),

invest as (
  select 
     ub.activity_tag,
     count(distinct(ub.user_id)) as inv_num, -- 投资人数
     round(sum(decode(pd.tender_subject, 2, pd.tend_cash, pd.tender_capital))/10000,2) AS inv_money, --累计投资金额
     round(sum(decode(pd.tender_subject, 2, pd.tend_cash, pd.tender_capital)*borrow_period)/
       sum(decode(pd.tender_subject, 2, pd.tend_cash, pd.tender_capital)),2) as avg_period --加权平均期限
  from edw_user_basic ub 
    left join edw_trading_project_detail pd on ub.user_id = pd.user_id
  where tender_account_status in (0,1)
    and activity_tag is not null
    and to_char(addtime,'yyyymmdd') between '${stat_time}' and '${end_time}'
  group by ub.activity_tag 

),

---以下字段和时间筛选条件无关,历史累计数据部分

sum_recharge as(  --累计充值
  select
    ub.activity_tag,
    sum(amount) as sum_re_amount --充值金额
  from edw_user_basic ub 
    left join edw_money_acc_recharge ar on ar.user_id = ub.user_id
  where DEDUCT_STATUS in (20,10)
  group by  ub.activity_tag  
),

max_total as(  --历史最大资产
    select * from(
  select activity_tag, 
  sum(max_asset) as max_asset 
  from MDTXBI.DM_MAX_ASSET
   where activity_tag is not null
  group by activity_tag
)
 
）,


channel_all as(
  select 
    ub.activity_tag,
    sum(case when normal_firstinvest_time is not null or depository_firstinvest_time is not null then 1 else 0 end) as inv_num, --投资人数
    round(sum(nor_recover_capital_wait+nor_recover_interest_wait+dep_recover_capital_wait+dep_recover_interest_wait)/10000,2) as money_wait, -- 待收金额
    sum(case when（normal_firstinvest_time is not null or depository_firstinvest_time is not null）
      and nor_recover_capital_wait+dep_recover_capital_wait=0 then 1 else 0 end) as wait_liushi, -- 待收流失人数
    round(sum(ac.nor_balance+ ac.dep_balance)/10000,2) as balance, --账户余额
    sum(nor_balance+
        dep_balance+
        nor_lock_amount+
        dep_tender_lock_amount+
        dep_financial_lock_amount+
        nor_ddz_amount+
        nor_recover_capital_wait+
        dep_recover_capital_wait) as total -- 总资产
        
  from edw_user_basic ub
    left join edw_user_acc_current ac on ub.user_id = ac.user_id
  where ub.activity_tag is not null
  group by ub.activity_tag

),

last_reg as (
  select 
    ub.activity_tag,
    to_date(to_char(sysdate,'yyyymmdd'),'YYYY-MM-DD HH24:MI:SS')-
      to_date(to_char(max(register_time),'yyyymmdd'),'YYYY-MM-DD HH24:MI:SS') as reg_last_time  --有注册天数
    
  from  edw_user_basic ub  
  where activity_tag is not null 
  group by ub.activity_tag 

)


select
  dc.channel_head as CHANNELHEAD,  --负责人
  dc.channel_name as CHANNELNAME,  --渠道名称
  dc.channel_label as CHANNELLABEL, --渠道标签
  
 tu.reg_num as REGISTERED,  --注册人数
  au.auth_num as CGNUM, --存管实名人数
  re_num as CZNUM, --充值人数
  

       
  re_amount as CZMONEY, --充值金额
  wi_amount as TXMONEY, --提现金额
  re_amount-wi_amount as CTMONEY, --充提差
  
  first_inv_num  AS SHOUTOU, --首投人数      -0731新增
  
  inv.inv_num as INVESTNUM, -- 投资人数
  inv.inv_money as INVESTMONEY, --投资金额
  
  inv.avg_period AS AVGP,  --加权平均期限   --0731新增
  
  
  --以下历史累计数据
  ca.balance as ZHMONEY, --账户余额
  ca.money_wait as DSMONEY, -- 待收金额
  ca.wait_liushi as DSLSNUM, -- 待收流失人数
  
  round(ca.wait_liushi/decode(ca.inv_num,0,1,ca.inv_num),2) as INVESTLS, --投资用户流失率 = 有待收人数/投资人数
  round(ca.total/decode(mt.max_asset,0,1,mt.max_asset),4) as ZICHAN, --资产留存率 = 总资产/历史账户最大资产
  round(ca.total/decode(sr.sum_re_amount,0,1,sr.sum_re_amount),4) as CHONGZHI,  -- 充值金额留存率 = 总资产/累计充值金额   
  reg_last_time AS TIMER -- 有注册天数  --0731新增
from dim_channel dc
  left join tmp_user tu on (dc.channel_label = tu.activity_tag)
  left join auth au on (dc.channel_label = au.activity_tag)
  left join recharge re on (dc.channel_label = re.activity_tag)
  left join withdraw wi on (dc.channel_label = wi.activity_tag)
  left join first_inv fi on (dc.channel_label = fi.activity_tag)  
  left join invest inv on (dc.channel_label = inv.activity_tag)
  left join sum_recharge sr on (dc.channel_label = sr.activity_tag)
  left join max_total mt on (dc.channel_label = mt.activity_tag)
  left join channel_all ca on (dc.channel_label = ca.activity_tag)
  left join last_reg lr on (dc.channel_label = lr.activity_tag)

)

union all

select 
CHANNELHEAD,  --负责人
 CHANNELNAME,  --渠道名称
 CHANNELLABEL, --渠道标签
  
 REGISTERED,  --注册人数
CGNUM, --存管实名人数
 CZNUM, --充值人数
 CZMONEY, --充值金额
 TXMONEY, --提现金额
 CTMONEY, --充提差
  
 SHOUTOU, --首投人数      -0731新增
  
 INVESTNUM, -- 投资人数
 INVESTMONEY, --投资金额
  
 AVGP,  --加权平均期限   --0731新增
  
  
  --以下历史累计数据
 ZHMONEY, --账户余额
 DSMONEY, -- 待收金额
 DSLSNUM, -- 待收流失人数
  
 case when INVESTLS is null then '' else INVESTLS*100||'%' end as INVESTLS, 
  case when ZICHAN is null then '' else ZICHAN*100||'%' end as ZICHAN,
  case when CHONGZHI is null then '' else CHONGZHI*100||'%' end as CHONGZHI,
 
 TIMER -- 有注册天数  --0731新增
from
(
with tmp_user as(
  select 
    ub.activity_tag,
    count(1) as reg_num  --注册人数
  from  edw_user_basic ub  
  where to_char(register_time,'yyyymmdd') between '${stat_time}' and '${end_time}'
    and activity_tag is not null 
  group by ub.activity_tag 
  
),

auth as(
  select
    activity_tag ,
    count(user_id) as auth_num  --实名人数
  from edw_user_basic ub 
  where to_char(least( nvl(ub.NORMAL_auth_TIME,sysdate) , nvl(ub.DEPOSITORY_auth_TIME,sysdate)),'yyyymmdd')
    between '${stat_time}' and '${stat_time}'
    and activity_tag is not null
  group by activity_tag 
),

--  round(least( nvl(ub.NORMAL_FIRSTINVEST_TIME,sysdate) , nvl(ub.DEPOSITORY_FIRSTINVEST_TIME,sysdate)) -
--    ub.register_time,0) as jushoutou, --注册后距首投时间

recharge as(
  select
    ub.activity_tag,
    count(distinct(ub.user_id)) as re_num, --充值人数
    round(sum(amount)/10000,2) as re_amount --充值金额
  from edw_user_basic ub 
    left join edw_money_acc_recharge ar on ar.user_id = ub.user_id
  where DEDUCT_STATUS in (20,10)
    and to_char(DEDUCT_TIME_YES,'yyyymmdd') between '${stat_time}' and '${end_time}'
    and activity_tag is not null
  group by  ub.activity_tag  
),

withdraw as(
  select
    activity_tag,
    round(sum(amount)/10000,2) as wi_amount --提现金额
  from edw_user_basic ub
    left join edw_money_acc_withdraw ar on ar.user_id = ub.user_id
  where DEDUCT_STATUS in (20,10)
    and to_char(DEDUCT_TIME_YES,'yyyymmdd') between '${stat_time}' and '${end_time}'
    and activity_tag is not null
  group by  ub.activity_tag  
),

first_inv as(
  select 
    ub.activity_tag,
    count(user_id) as first_inv_num  --首投人数
  from  edw_user_basic ub  
  where to_char(firstinvest_time,'yyyymmdd') between '${stat_time}' and '${end_time}'
    and activity_tag is not null
  group by ub.activity_tag 
),

invest as (
  select 
     ub.activity_tag,
     count(distinct(ub.user_id)) as inv_num, -- 投资人数
     round(sum(decode(pd.tender_subject, 2, pd.tend_cash, pd.tender_capital))/10000,2) AS inv_money, --累计投资金额
     round(sum(decode(pd.tender_subject, 2, pd.tend_cash, pd.tender_capital)*borrow_period)/
       sum(decode(pd.tender_subject, 2, pd.tend_cash, pd.tender_capital)),2) as avg_period --加权平均期限
  from edw_user_basic ub 
    left join edw_trading_project_detail pd on ub.user_id = pd.user_id
  where tender_account_status in (0,1)
    and activity_tag is not null
    and to_char(addtime,'yyyymmdd') between '${stat_time}' and '${end_time}'
  group by ub.activity_tag 

),

---以下字段和时间筛选条件无关,历史累计数据部分

sum_recharge as(  --累计充值
  select
    ub.activity_tag,
    sum(amount) as sum_re_amount --充值金额
  from edw_user_basic ub 
    left join edw_money_acc_recharge ar on ar.user_id = ub.user_id
  where DEDUCT_STATUS in (20,10)
  group by  ub.activity_tag  
),

max_total as(  --历史最大资产
  	select * from(
	select activity_tag, 
	sum(max_asset) as max_asset 
	from MDTXBI.DM_MAX_ASSET
	 where activity_tag is not null
	group by activity_tag
)
 
）,


channel_all as(
  select 
    ub.activity_tag,
    sum(case when normal_firstinvest_time is not null or depository_firstinvest_time is not null then 1 else 0 end) as inv_num, --投资人数
    round(sum(nor_recover_capital_wait+nor_recover_interest_wait+dep_recover_capital_wait+dep_recover_interest_wait)/10000,2) as money_wait, -- 待收金额
    sum(case when（normal_firstinvest_time is not null or depository_firstinvest_time is not null）
      and nor_recover_capital_wait+dep_recover_capital_wait=0 then 1 else 0 end) as wait_liushi, -- 待收流失人数
    round(sum(ac.nor_balance+ ac.dep_balance)/10000,2) as balance, --账户余额
    sum(nor_balance+
        dep_balance+
        nor_lock_amount+
        dep_tender_lock_amount+
        dep_financial_lock_amount+
        nor_ddz_amount+
        nor_recover_capital_wait+
        dep_recover_capital_wait) as total -- 总资产
        
  from edw_user_basic ub
    left join edw_user_acc_current ac on ub.user_id = ac.user_id
  where ub.activity_tag is not null
  group by ub.activity_tag

),

last_reg as (
  select 
    ub.activity_tag,
    to_date(to_char(sysdate,'yyyymmdd'),'YYYY-MM-DD HH24:MI:SS')-
      to_date(to_char(max(register_time),'yyyymmdd'),'YYYY-MM-DD HH24:MI:SS') as reg_last_time  --有注册天数
    
  from  edw_user_basic ub  
  where activity_tag is not null 
  group by ub.activity_tag 

)


select
  dc.channel_head as CHANNELHEAD,  --负责人
  dc.channel_name as CHANNELNAME,  --渠道名称
  dc.channel_label as CHANNELLABEL, --渠道标签
  
 tu.reg_num as REGISTERED,  --注册人数
  au.auth_num as CGNUM, --存管实名人数
  re_num as CZNUM, --充值人数
  re_amount as CZMONEY, --充值金额
  wi_amount as TXMONEY, --提现金额
  re_amount-wi_amount as CTMONEY, --充提差
  
  first_inv_num  AS SHOUTOU, --首投人数      -0731新增
  
  inv.inv_num as INVESTNUM, -- 投资人数
  inv.inv_money as INVESTMONEY, --投资金额
  
  inv.avg_period AS AVGP,  --加权平均期限   --0731新增
  
  
  --以下历史累计数据
  ca.balance as ZHMONEY, --账户余额
  ca.money_wait as DSMONEY, -- 待收金额
  ca.wait_liushi as DSLSNUM, -- 待收流失人数
  
  round(ca.wait_liushi/decode(ca.inv_num,0,1,ca.inv_num),2) as INVESTLS, --投资用户流失率 = 有待收人数/投资人数
  round(ca.total/decode(mt.max_asset,0,1,mt.max_asset),4) as ZICHAN, --资产留存率 = 总资产/历史账户最大资产
  round(ca.total/decode(sr.sum_re_amount,0,1,sr.sum_re_amount),4) as CHONGZHI,  -- 充值金额留存率 = 总资产/累计充值金额   
  reg_last_time AS TIMER -- 有注册天数  --0731新增
from dim_channel dc
  left join tmp_user tu on (dc.channel_label = tu.activity_tag)
  left join auth au on (dc.channel_label = au.activity_tag)
  left join recharge re on (dc.channel_label = re.activity_tag)
  left join withdraw wi on (dc.channel_label = wi.activity_tag)
  left join first_inv fi on (dc.channel_label = fi.activity_tag)  
  left join invest inv on (dc.channel_label = inv.activity_tag)
  left join sum_recharge sr on (dc.channel_label = sr.activity_tag)
  left join max_total mt on (dc.channel_label = mt.activity_tag)
  left join channel_all ca on (dc.channel_label = ca.activity_tag)
  left join last_reg lr on (dc.channel_label = lr.activity_tag)
order by  CZNUM asc,TIMER desc
  )
  where 1=1
${channelName}

${channelHead}













