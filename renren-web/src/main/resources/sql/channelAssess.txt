
with ub as(
select 
  ub.*,
  case  when activity_tag is not null and  activity_tag <>'invited' then '渠道'
    when (spreads_userid is not null and activity_tag is  null) or activity_tag ='invited' then '邀请'
    when spreads_userid is  null and activity_tag is  null then '自然流量'  end as rk       --自然流量
from edw_user_basic ub
where is_borrower = 0
),

resource_kind as (
  select '渠道' as rk from dual union all
  select '邀请' as rk from dual union all
  select '自然流量' as rk from dual 
 
),

reg as(
  select 
    ub.rk,
    count(1) as reg_num  --注册人数
  from   ub  
  where to_char(register_time,'yyyymmdd') between '${stat_time}' and '${end_time}'
  group by ub.rk 
  
),

auth as(
  select
    rk ,
    count(user_id) as auth_num  --实名人数
  from  ub 
  where to_char(least( nvl(ub.NORMAL_auth_TIME,sysdate) , nvl(ub.DEPOSITORY_auth_TIME,sysdate)),'yyyymmdd')
    between '${stat_time}' and '${end_time}'
  group by rk 
),


recharge as(
  select
    ub.rk,
    count(distinct(ub.user_id)) as re_num, --充值人数
    round(sum(amount)/10000,2) as re_amount --充值金额
  from  ub 
    left join edw_money_acc_recharge ar on ar.user_id = ub.user_id
  where DEDUCT_STATUS in (20,10)
    and to_char(DEDUCT_TIME_YES,'yyyymmdd') between '${stat_time}' and '${end_time}'
  group by  ub.rk  
),

withdraw as(
  select
    rk,
    round(sum(amount)/10000,2) as wi_amount --提现金额
  from  ub
    left join edw_money_acc_withdraw ar on ar.user_id = ub.user_id
  where DEDUCT_STATUS in (20,10)
    and to_char(DEDUCT_TIME_YES,'yyyymmdd') between '${stat_time}' and '${end_time}'
  group by  ub.rk  
),

first_inv as(
  select 
    ub.rk,
    count(user_id) as first_inv_num,  --首投人数
    sum(case when nvl(normal_firstinvest_time,sysdate)<nvl(depository_firstinvest_time,sysdate) then  normal_firstinvest_balance
    else depository_firstinvest_balance end) as inv_first_money  --首投金额  
  from   ub  
  where to_char(firstinvest_time,'yyyymmdd') between '${stat_time}' and '${end_time}'
  group by ub.rk 
),

invest as (
  select 
     ub.rk,
     count(distinct(ub.user_id)) as inv_num, -- 投资人数
     round(sum(decode(pd.tender_subject, 2, pd.tend_cash, pd.tender_capital))/10000,2) AS inv_money, --累计投资金额
     round(sum(decode(pd.tender_subject, 2, pd.tend_cash, pd.tender_capital)*borrow_period)/
       sum(decode(pd.tender_subject, 2, pd.tend_cash, pd.tender_capital)),2) as avg_period --加权平均期限
  from  ub 
    left join EDW_TRADING_PROJECT_DETAIL pd on ub.user_id = pd.user_id
  where tender_account_status in (0,1)
    and to_char(addtime,'yyyymmdd') between '${stat_time}' and '${end_time}'
  group by ub.rk 

),

---以下字段和时间筛选条件无关,历史累计数据部分

sum_recharge as(  --累计充值
  select
    ub.rk,
    sum(amount) as sum_re_amount --充值金额
  from  ub 
    left join edw_money_acc_recharge ar on ar.user_id = ub.user_id
  where DEDUCT_STATUS in (20,10)
  group by  ub.rk  
),

max_total as(
  select 
     activity_tag AS rk,
     sum(max_asset) as max_asset
  from dm_max_asset ma
  group by activity_tag
),


channel_all as(
  select 
    ub.rk,
    sum(case when normal_firstinvest_time is not null or depository_firstinvest_time is not null then 1 else 0 end) as inv_num, --投资人数
    round(sum(nor_recover_capital_wait+nor_recover_interest_wait+dep_recover_capital_wait+dep_recover_interest_wait)/10000,2) as money_wait, -- 待收金额
    sum(case when（normal_firstinvest_time is not null or depository_firstinvest_time is not null）
      and nor_recover_capital_wait+dep_recover_capital_wait=0 then 1 else 0 end) as wait_liushi, -- 待收流失人数
    round(sum(ac.nor_balance+ ac.dep_balance)/10000,2) as balance, --账户余额
    sum(nor_balance+
        dep_balance+
        nor_ddz_amount+
        nor_recover_capital_wait+
        dep_recover_capital_wait) as total -- 总资产
        
  from  ub
    left join edw_user_acc_current ac on ub.user_id = ac.user_id
  group by ub.rk

),

last_reg as (
  select 
    ub.rk,
    to_date(to_char(sysdate,'yyyymmdd'),'YYYY-MM-DD HH24:MI:SS')-
      to_date(to_char(max(register_time),'yyyymmdd'),'YYYY-MM-DD HH24:MI:SS') as reg_last_time  --有注册天数
    
  from   ub   
  group by ub.rk 

),
--0814新增
cost as(
    select 
    cn.channel_label,
    sum(cost) as cost  --注册人数
  from  dim_channel_cost_new cn  
   where stat_period <=to_char(sysdate,'yyyymmdd')
  group by cn.channel_label 

)
select 
 '汇总' as CHANNELHEAD,  --负责人
  null as CHANNELNAME,  --渠道名称
  null as CHANNELLABEL, --渠道标签
  NULL as COST,  -- 渠道费用  --0814新增
sum(REGISTERED) as REGISTERED ,  --注册人数
NULL as AVGCOST, --人均注册成本  --0814新增
sum(CGNUM) as CGNUM, --实名人数    --0731修正
sum(CZNUM) as CZNUM, --充值人数
sum(CZMONEY) as CZMONEY, --充值金额
sum(TXMONEY) as TXMONEY, --提现金额
sum(CTMONEY) as CTMONEY, --充提差
sum(SHOUTOU) as SHOUTOU, --首投人数      -0731新增
  null as FIRSTCOST, --人均首投成本   --0814新增
  null as FIRSTMONEY,  --首投金额  --0814新增
  null as  ROI,  --首投金额roi  --0814新增
sum(INVESTNUM) as INVESTNUM, -- 投资人数
sum(INVESTMONEY) as INVESTMONEY, --投资金额
null as AVGP,  --加权平均期限   --0731新增

  --以下历史累计数据
 sum(ZHMONEY) as ZHMONEY, --账户余额
 sum(DSMONEY) as DSMONEY, -- 待收金额
 sum(DSLSNUM) as DSLSNUM, -- 待收流失人数
null as INVESTLS, --投资用户流失率 = 有待收人数/投资人数
null as ZICHAN, --资产留存率 = 总资产/历史账户最大资产
null as CHONGZHI,  -- 充值金额留存率 = 总资产/累计充值金额   
null as TIMER -- 最近注册天数  --0731新增
from(
select
  dc.rk as CHANNELHEAD,  --负责人
  null as CHANNELNAME,  --渠道名称
  null as CHANNELLABEL, --渠道标签
  null as COST,  -- 渠道费用  --0814新增
  null as avg_inv_cost, --人均首投成本   --0814新增
  null as inv_first_money,  --首投金额  --0814新增
  null as  roi,  --首投金额roi  --0814新增
  tu.reg_num as REGISTERED,  --注册人数
  au.auth_num as CGNUM, --实名人数    --0731修正
  null as avg_cost, --人均注册成本  --0814新增
  re_num as CZNUM, --充值人数
  re_amount as CZMONEY, --充值金额
  wi_amount as TXMONEY, --提现金额
  nvl(re_amount,0)-nvl(wi_amount,0) as CTMONEY, --充提差
  first_inv_num as SHOUTOU, --首投人数      -0731新增
  inv.inv_num as INVESTNUM, -- 投资人数
  inv.inv_money as INVESTMONEY, --投资金额
  inv.avg_period as AVGP,  --加权平均期限   --0731新增
  
  
  --以下历史累计数据
  ca.balance as ZHMONEY, --账户余额
  ca.money_wait as DSMONEY, -- 待收金额
  ca.wait_liushi as DSLSNUM, -- 待收流失人数
  round(ca.wait_liushi/decode(ca.inv_num,0,1,ca.inv_num),2) as INVESTLS, --投资用户流失率 = 有待收人数/投资人数
  round(ca.total/decode(mt.max_asset,0,1,mt.max_asset),4) as ZICHAN, --资产留存率 = 总资产/历史账户最大资产
  round(ca.total/decode(sr.sum_re_amount,0,1,sr.sum_re_amount),4) as CHONGZHI,  -- 充值金额留存率 = 总资产/累计充值金额   
  reg_last_time as TIMER -- 最近注册天数  --0731新增
from resource_kind dc
  left join reg tu on (dc.rk = tu.rk)
  left join auth au on (dc.rk = au.rk)
  left join recharge re on (dc.rk = re.rk)
  left join withdraw wi on (dc.rk = wi.rk)
  left join first_inv fi on (dc.rk = fi.rk)  
  left join invest inv on (dc.rk = inv.rk)
  left join sum_recharge sr on (dc.rk = sr.rk)
  left join max_total mt on (dc.rk = mt.rk)
  left join channel_all ca on (dc.rk = ca.rk)
  left join last_reg lr on (dc.rk = lr.rk)
  left join cost on (cost.channel_label = dc.rk)
)
union all
select
  dc.rk as CHANNELHEAD,  --负责人
  null as CHANNELNAME,  --渠道名称
  null as CHANNELLABEL, --渠道标签
  null as COST,  -- 渠道费用  --0814新增
  tu.reg_num as REGISTERED,  --注册人数
  null as INVCOST, --人均首投成本   --0814新增
  au.auth_num as CGNUM, --实名人数    --0731修正
  re_num as CZNUM, --充值人数
  re_amount as CZMONEY, --充值金额
  wi_amount as TXMONEY, --提现金额
  nvl(re_amount,0)-nvl(wi_amount,0) as CTMONEY, --充提差
  first_inv_num as SHOUTOU, --首投人数      -0731新增

  NULL as INVCOST, --人均首投成本   --0814新增
  NULL as FIRSTMONEY ,  --首投金额  --0814新增 
  NULL as ROI,  --首投金额roi  --0814新增
  inv.inv_num as INVESTNUM, -- 投资人数
  inv.inv_money as INVESTMONEY, --投资金额
  inv.avg_period as AVGP,  --加权平均期限   --0731新增
  
  
  --以下历史累计数据
  ca.balance as ZHMONEY, --账户余额
  ca.money_wait as DSMONEY, -- 待收金额
  ca.wait_liushi as DSLSNUM, -- 待收流失人数
  round(ca.wait_liushi/decode(ca.inv_num,0,1,ca.inv_num),2) as INVESTLS, --投资用户流失率 = 有待收人数/投资人数
  round(ca.total/decode(mt.max_asset,0,1,mt.max_asset),4) as ZICHAN, --资产留存率 = 总资产/历史账户最大资产
  round(ca.total/decode(sr.sum_re_amount,0,1,sr.sum_re_amount),4) as CHONGZHI,  -- 充值金额留存率 = 总资产/累计充值金额   
  reg_last_time as TIMER -- 最近注册天数  --0731新增
from resource_kind dc
  left join reg tu on (dc.rk = tu.rk)
  left join auth au on (dc.rk = au.rk)
  left join recharge re on (dc.rk = re.rk)
  left join withdraw wi on (dc.rk = wi.rk)
  left join first_inv fi on (dc.rk = fi.rk)  
  left join invest inv on (dc.rk = inv.rk)
  left join sum_recharge sr on (dc.rk = sr.rk)
  left join max_total mt on (dc.rk = mt.rk)
  left join channel_all ca on (dc.rk = ca.rk)
  left join last_reg lr on (dc.rk = lr.rk)


union all


select 
CHANNELHEAD,  --负责人
 CHANNELNAME,  --渠道名称
 CHANNELLABEL, --渠道标签
 COST,  -- 渠道费用  --0814新增

 REGISTERED,  --注册人数
  avg_cost, -- 人均注册成本  --0814新增
CGNUM, --存管实名人数
 CZNUM, --充值人数
 CZMONEY, --充值金额
 TXMONEY, --提现金额
 CTMONEY, --充提差
  
 SHOUTOU, --首投人数      -0731新增
 avg_inv_cost, --人均首投成本   --0814新增
 inv_first_money,  --首投金额  --0814新增
  roi,  --首投金额roi  --0814新增
 INVESTNUM, -- 投资人数
 INVESTMONEY, --投资金额
  
 AVGP,  --加权平均期限   --0731新增
  
  
  --以下历史累计数据
 ZHMONEY, --账户余额
 DSMONEY, -- 待收金额
 DSLSNUM, -- 待收流失人数
  INVESTLS,
  ZICHAN,
  CHONGZHI,
-- case when INVESTLS is null then '' else INVESTLS*100||'%' end as INVESTLS, 
--  case when ZICHAN is null then '' else ZICHAN*100||'%' end as ZICHAN,
--  case when CHONGZHI is null then '' else CHONGZHI*100||'%' end as CHONGZHI,
 
 TIMER -- 有注册天数  --0731新增
from
(
with tmp_user as(
  select 
    ub.activity_tag,
    count(1) as reg_num  --注册人数
  from  edw_user_basic ub  
  where to_char(register_time,'yyyymmdd') between '${stat_time}' and '${end_time}'
    and activity_tag is not null 
  group by ub.activity_tag 
  
),

auth as(
  select
    activity_tag ,
    count(user_id) as auth_num  --实名人数
  from edw_user_basic ub 
  where to_char(least( nvl(ub.NORMAL_auth_TIME,sysdate) , nvl(ub.DEPOSITORY_auth_TIME,sysdate)),'yyyymmdd')
    between '${stat_time}' and '${end_time}'
    and activity_tag is not null
  group by activity_tag 
),

--  round(least( nvl(ub.NORMAL_FIRSTINVEST_TIME,sysdate) , nvl(ub.DEPOSITORY_FIRSTINVEST_TIME,sysdate)) -
--    ub.register_time,0) as jushoutou, --注册后距首投时间

recharge as(
  select
    ub.activity_tag,
    count(distinct(ub.user_id)) as re_num, --充值人数
    round(sum(amount)/10000,2) as re_amount --充值金额
  from edw_user_basic ub 
    left join edw_money_acc_recharge ar on ar.user_id = ub.user_id
  where DEDUCT_STATUS in (20,10)
    and to_char(DEDUCT_TIME_YES,'yyyymmdd') between  '${stat_time}'  and '${end_time}'
    and activity_tag is not null
  group by  ub.activity_tag  
),



withdraw as(
  select
    activity_tag,
    round(sum(amount)/10000,2) as wi_amount --提现金额
  from edw_user_basic ub
    left join edw_money_acc_withdraw ar on ar.user_id = ub.user_id
  where DEDUCT_STATUS in (20,10)
    and to_char(DEDUCT_TIME_YES,'yyyymmdd') between '${stat_time}' and '${end_time}'
    and activity_tag is not null
  group by  ub.activity_tag  
),

first_inv as(
  select 
    ub.activity_tag,
    count(user_id) as first_inv_num,  --首投人数
    sum(case when nvl(normal_firstinvest_time,sysdate)<nvl(depository_firstinvest_time,sysdate) then  normal_firstinvest_balance
    else depository_firstinvest_balance end) as inv_first_money  --首投金额  
  from  edw_user_basic ub  
  where to_char(firstinvest_time,'yyyymmdd') between '${stat_time}' and '${end_time}'
    and activity_tag is not null
  group by ub.activity_tag 
),

invest as (
  select 
     ub.activity_tag,
     count(distinct(ub.user_id)) as inv_num, -- 投资人数
     round(sum(decode(pd.tender_subject, 2, pd.tend_cash, pd.tender_capital))/10000,2) AS inv_money, --累计投资金额
     round(sum(decode(pd.tender_subject, 2, pd.tend_cash, pd.tender_capital)*borrow_period)/
       sum(decode(pd.tender_subject, 2, pd.tend_cash, pd.tender_capital)),2) as avg_period --加权平均期限
  from edw_user_basic ub 
    left join edw_trading_project_detail pd on ub.user_id = pd.user_id
  where tender_account_status in (0,1)
    and activity_tag is not null
    and to_char(addtime,'yyyymmdd') between '${stat_time}' and '${end_time}'
  group by ub.activity_tag 

),

---以下字段和时间筛选条件无关,历史累计数据部分

sum_recharge as(  --累计充值
  select
    ub.activity_tag,
    sum(amount) as sum_re_amount --充值金额
  from edw_user_basic ub 
    left join edw_money_acc_recharge ar on ar.user_id = ub.user_id
  where DEDUCT_STATUS in (20,10)
  group by  ub.activity_tag  
),

max_total as(  --历史最大资产
    select * from(
  select activity_tag, 
  sum(max_asset) as max_asset 
  from MDTXBI.DM_MAX_ASSET
   where activity_tag is not null
  group by activity_tag
)
 
）,


channel_all as(
  select 
    ub.activity_tag,
    sum(case when normal_firstinvest_time is not null or depository_firstinvest_time is not null then 1 else 0 end) as inv_num, --投资人数
    round(sum(nor_recover_capital_wait+nor_recover_interest_wait+dep_recover_capital_wait+dep_recover_interest_wait)/10000,2) as money_wait, -- 待收金额
    sum(case when（normal_firstinvest_time is not null or depository_firstinvest_time is not null）
      and nor_recover_capital_wait+dep_recover_capital_wait=0 then 1 else 0 end) as wait_liushi, -- 待收流失人数
    round(sum(ac.nor_balance+ ac.dep_balance)/10000,2) as balance, --账户余额
    sum(nor_balance+
        dep_balance+
        nor_ddz_amount+
        nor_recover_capital_wait+
        dep_recover_capital_wait) as total -- 总资产
        
  from edw_user_basic ub
    left join edw_user_acc_current ac on ub.user_id = ac.user_id
  where ub.activity_tag is not null
  group by ub.activity_tag

),

last_reg as (
  select 
    ub.activity_tag,
    to_date(to_char(sysdate,'yyyymmdd'),'YYYY-MM-DD HH24:MI:SS')-
      to_date(to_char(max(register_time),'yyyymmdd'),'YYYY-MM-DD HH24:MI:SS') as reg_last_time  --有注册天数
    
  from  edw_user_basic ub  
  where activity_tag is not null 
  group by ub.activity_tag 

),
--0814新增
cost as(
    select 
    cn.channel_label,
    sum(cost) as cost  --注册人数
  from  dim_channel_cost_new cn  
   where stat_period <=to_char(sysdate,'yyyymmdd')
  group by cn.channel_label 

)

select
  dc.channel_head as CHANNELHEAD,  --负责人
  dc.channel_name as CHANNELNAME,  --渠道名称
  dc.channel_label as CHANNELLABEL, --渠道标签
  cost.cost,
 tu.reg_num as REGISTERED,  --注册人数
   round(cost.cost/decode(tu.reg_num,0,1,tu.reg_num),2) as avg_cost, --人均注册成本  --0814新增
  au.auth_num as CGNUM, --存管实名人数
  re_num as CZNUM, --充值人数
  re_amount as CZMONEY, --充值金额
  wi_amount as TXMONEY, --提现金额
  nvl(re_amount,0)-nvl(wi_amount,0)  as CTMONEY, --充提差
  
  first_inv_num  AS SHOUTOU, --首投人数      -0731新增
    round(cost.cost/decode(first_inv_num,0,1,first_inv_num),2) as avg_inv_cost, --人均首投成本   --0814新增
  inv_first_money,  --首投金额  --0814新增
  round(inv_first_money/decode(cost.cost,0,1,cost.cost),2) as roi,  --首投金额roi  --0814新增
  inv.inv_num as INVESTNUM, -- 投资人数
  inv.inv_money as INVESTMONEY, --投资金额
  
  inv.avg_period AS AVGP,  --加权平均期限   --0731新增
  
  
  --以下历史累计数据
  ca.balance as ZHMONEY, --账户余额
  ca.money_wait as DSMONEY, -- 待收金额
  ca.wait_liushi as DSLSNUM, -- 待收流失人数
  
  round(ca.wait_liushi/decode(ca.inv_num,0,1,ca.inv_num),2) as INVESTLS, --投资用户流失率 = 有待收人数/投资人数
  round(ca.total/decode(mt.max_asset,0,1,mt.max_asset),4) as ZICHAN, --资产留存率 = 总资产/历史账户最大资产
  round(ca.total/decode(sr.sum_re_amount,0,1,sr.sum_re_amount),4) as CHONGZHI,  -- 充值金额留存率 = 总资产/累计充值金额   
  reg_last_time AS TIMER -- 有注册天数  --0731新增
from dim_channel dc
  left join tmp_user tu on (dc.channel_label = tu.activity_tag)
  left join auth au on (dc.channel_label = au.activity_tag)
  left join recharge re on (dc.channel_label = re.activity_tag)
  left join withdraw wi on (dc.channel_label = wi.activity_tag)
  left join first_inv fi on (dc.channel_label = fi.activity_tag)  
  left join invest inv on (dc.channel_label = inv.activity_tag)
  left join sum_recharge sr on (dc.channel_label = sr.activity_tag)
  left join max_total mt on (dc.channel_label = mt.activity_tag)
  left join channel_all ca on (dc.channel_label = ca.activity_tag)
  left join last_reg lr on (dc.channel_label = lr.activity_tag)
    left join cost on (cost.channel_label = dc.channel_label)
    order by nvl(tu.reg_num,0) desc, reg_last_time asc 
  )
  where 1=1
${channelName}

${channelHead}













