--SQL中所用变量  月：'${month}'  日：'${period}'

WITH REG AS(
  SELECT
    RESOURCE_KIND,
    NVL(CHANNEL_HEAD,'其他')AS CHANNEL_HEAD,
    SUM(CASE WHEN TO_CHAR(UB.REGISTER_TIME,'yyyymmdd') <='${period}' THEN 1 ELSE 0 END ) AS ALL_REG,  --所有注册人数
    SUM(CASE WHEN TO_CHAR(UB.REGISTER_TIME,'yyyymm') ='${month}' 
      AND TO_CHAR(UB.REGISTER_TIME,'yyyymmdd')<='${period}' THEN 1 ELSE 0 END) AS M_REG,
    SUM(CASE WHEN TO_CHAR(UB.REGISTER_TIME,'yyyymmdd') ='${period}' THEN 1 ELSE 0 END ) AS D_REG,
    
    SUM(CASE WHEN TO_CHAR(UB.FIRSTINVEST_TIME,'yyyymmdd')<='${period}' THEN 1 ELSE 0 END) AS ALL_FIRST,
    SUM(CASE WHEN TO_CHAR(UB.FIRSTINVEST_TIME,'yyyymm') ='${month}' 
      AND TO_CHAR(UB.FIRSTINVEST_TIME,'yyyymmdd')<='${period}' THEN 1 ELSE 0 END) AS M_FIRST,
    SUM(CASE WHEN TO_CHAR(UB.FIRSTINVEST_TIME,'yyyymmdd') ='${period}' THEN 1 ELSE 0 END ) AS D_FIRST,
    
    SUM(CASE WHEN TO_CHAR(UB.FIRSTINVEST_TIME,'yyyymm') ='${month}' AND TO_CHAR(UB.FIRSTINVEST_TIME,'yyyymmdd')<='${period}' THEN 
      DECODE(FIRSTINVEST_TIME,NORMAL_FIRSTINVEST_TIME,NVL(NORMAL_FIRSTINVEST_BALANCE,0),NVL(DEPOSITORY_FIRSTINVEST_BALANCE,0)) 
      ELSE 0 END ) AS M_FIRST_INV,
    SUM(CASE WHEN TO_CHAR(UB.FIRSTINVEST_TIME,'yyyymmdd')='${period}' THEN 
      DECODE(FIRSTINVEST_TIME,NORMAL_FIRSTINVEST_TIME,NVL(NORMAL_FIRSTINVEST_BALANCE,0),NVL(DEPOSITORY_FIRSTINVEST_BALANCE,0)) 
      ELSE 0 END ) AS D_FIRST_INV
  
  FROM EDW_USER_BASIC UB
    LEFT JOIN DIM_CHANNEL DC ON UB.ACTIVITY_TAG = DC.CHANNEL_LABEL 
  WHERE IS_BORROWER=0   
  GROUP BY RESOURCE_KIND,CHANNEL_HEAD
),

--充值
RE AS(
  SELECT
    RESOURCE_KIND,
    NVL(CHANNEL_HEAD,'其他')AS CHANNEL_HEAD,
    SUM(CASE WHEN TO_CHAR(DEDUCT_TIME_YES,'yyyymm') ='${month}' 
      AND TO_CHAR(DEDUCT_TIME_YES,'yyyymmdd')<='${period}' THEN AMOUNT ELSE 0 END) AS M_RE,
    SUM(CASE WHEN TO_CHAR(DEDUCT_TIME_YES,'yyyymmdd') ='${period}' THEN AMOUNT ELSE 0 END ) AS D_RE
  FROM EDW_MONEY_ACC_RECHARGE RE 
    INNER JOIN EDW_USER_BASIC UB ON RE.USER_ID = UB.USER_ID
    LEFT JOIN DIM_CHANNEL DC ON UB.ACTIVITY_TAG = DC.CHANNEL_LABEL
  WHERE IS_BORROWER=0 
    AND DEDUCT_STATUS =20
  GROUP BY RESOURCE_KIND,CHANNEL_HEAD
),
--提现
WI AS(
  SELECT
    RESOURCE_KIND,
    NVL(CHANNEL_HEAD,'其他')AS CHANNEL_HEAD,
    SUM(CASE WHEN TO_CHAR(DEDUCT_TIME_YES,'yyyymm') ='${month}' 
      AND TO_CHAR(DEDUCT_TIME_YES,'yyyymmdd')<='${period}' THEN AMOUNT ELSE 0 END) AS M_WI,
    SUM(CASE WHEN TO_CHAR(DEDUCT_TIME_YES,'yyyymmdd') ='${period}' THEN AMOUNT ELSE 0 END ) AS D_WI
  FROM EDW_MONEY_ACC_WITHDRAW WI 
    INNER JOIN EDW_USER_BASIC UB ON WI.USER_ID = UB.USER_ID
    LEFT JOIN DIM_CHANNEL DC ON UB.ACTIVITY_TAG = DC.CHANNEL_LABEL
  WHERE IS_BORROWER=0 
    AND DEDUCT_STATUS =20
  GROUP BY RESOURCE_KIND,CHANNEL_HEAD
),
INV AS(
  SELECT
    RESOURCE_KIND,
    NVL(CHANNEL_HEAD,'其他') AS CHANNEL_HEAD,
    SUM(CASE WHEN TO_CHAR(ADDTIME,'yyyymm') ='${month}' 
      AND TO_CHAR(ADDTIME,'yyyymmdd')<='${period}' THEN DECODE(TENDER_SUBJECT,2,TEND_CASH,TENDER_CAPITAL) ELSE 0 END) AS M_INV,
    SUM(CASE WHEN TO_CHAR(ADDTIME,'yyyymmdd') ='${period}' THEN DECODE(TENDER_SUBJECT,2,TEND_CASH,TENDER_CAPITAL) ELSE 0 END ) AS D_INV   
  FROM EDW_TRADING_PROJECT_DETAIL PD 
    INNER JOIN EDW_USER_BASIC UB ON PD.USER_ID = UB.USER_ID
    LEFT JOIN DIM_CHANNEL DC ON UB.ACTIVITY_TAG = DC.CHANNEL_LABEL  
  WHERE 1=1
    AND TENDER_ACCOUNT_STATUS IN (0,1)
  GROUP BY RESOURCE_KIND,CHANNEL_HEAD
),

--待收
AWAIT AS(
  SELECT
    RESOURCE_KIND,
    NVL(CHANNEL_HEAD,'其他') AS CHANNEL_HEAD,
    SUM(DEP_RECOVER_CAPITAL_WAIT_C+NOR_RECOVER_CAPITAL_WAIT_C) AS AWIAT
  FROM edw_user_acc_log  AC 
    INNER JOIN EDW_USER_BASIC UB ON AC.USER_ID = UB.USER_ID
    LEFT JOIN DIM_CHANNEL DC ON UB.ACTIVITY_TAG = DC.CHANNEL_LABEL  

  WHERE  AC.stat_period='${period}'
  GROUP BY RESOURCE_KIND,CHANNEL_HEAD
),

TMP AS(
  SELECT
    REG.RESOURCE_KIND,
    CASE WHEN REG.RESOURCE_KIND =2 THEN '邀请'
      WHEN REG.RESOURCE_KIND=3 THEN '自然流量'
      WHEN REG.RESOURCE_KIND=1 AND REG.CHANNEL_HEAD='吕素琴' THEN '吕素琴'
      WHEN REG.RESOURCE_KIND=1 AND REG.CHANNEL_HEAD='胡剑峰' THEN '胡剑峰'
      WHEN REG.RESOURCE_KIND=1 AND REG.CHANNEL_HEAD='谢皓' THEN '谢皓'
      WHEN REG.RESOURCE_KIND=1 AND REG.CHANNEL_HEAD='廖小清' THEN '廖小清' 
      WHEN REG.RESOURCE_KIND=1 AND (REG.CHANNEL_HEAD NOT IN ('吕素琴','胡剑峰','谢皓','廖小清') ) THEN '其他' END AS KIND,
    CASE WHEN REG.RESOURCE_KIND =2 THEN '1'
      WHEN REG.RESOURCE_KIND=3 THEN '2'
      WHEN REG.RESOURCE_KIND=1 AND REG.CHANNEL_HEAD='吕素琴' THEN '3'
      WHEN REG.RESOURCE_KIND=1 AND REG.CHANNEL_HEAD='胡剑峰' THEN '4'
      WHEN REG.RESOURCE_KIND=1 AND REG.CHANNEL_HEAD='谢皓' THEN '5'
      WHEN REG.RESOURCE_KIND=1 AND REG.CHANNEL_HEAD='廖小清' THEN '6' 
      WHEN REG.RESOURCE_KIND=1 AND (REG.CHANNEL_HEAD NOT IN ('吕素琴','胡剑峰','谢皓','廖小清') OR
        REG.CHANNEL_HEAD IS NULL) THEN '7' END AS RANK,
    ALL_REG,
    M_REG,
    D_REG,
    ALL_FIRST,
    M_FIRST,
    D_FIRST,
    M_FIRST_INV,
    D_FIRST_INV,
    M_RE,
    M_WI,
    M_RE-M_WI,
    D_RE,
    D_WI,
    D_RE-D_WI,
    M_INV,
    D_INV,
    AWIAT
  FROM REG
    LEFT JOIN RE ON (REG.RESOURCE_KIND = RE.RESOURCE_KIND AND REG.CHANNEL_HEAD=RE.CHANNEL_HEAD)
    LEFT JOIN WI ON (REG.RESOURCE_KIND = WI.RESOURCE_KIND AND REG.CHANNEL_HEAD=WI.CHANNEL_HEAD)
    LEFT JOIN INV ON (REG.RESOURCE_KIND = INV.RESOURCE_KIND AND REG.CHANNEL_HEAD=INV.CHANNEL_HEAD)
    LEFT JOIN AWAIT ON (REG.RESOURCE_KIND = AWAIT.RESOURCE_KIND AND REG.CHANNEL_HEAD=AWAIT.CHANNEL_HEAD)
)
SELECT * FROM (
SELECT
  '汇总' AS HUIZONG,
  SUM(ALL_REG) as ALL_REG,
  SUM(M_REG) as M_REG,
  SUM(D_REG) as D_REG,
  SUM(ALL_FIRST) as ALL_FIRST,
  SUM(M_FIRST) as M_FIRST,
  SUM(D_FIRST) as D_FIRST,  
  
  
  SUM(M_FIRST_INV) as M_FIRST_INV,
  SUM(D_FIRST_INV) as D_FIRST_INV,
  SUM(M_RE) as WEIZHI4,

  SUM(M_RE-M_WI) as WEIZHI3,
  SUM(D_RE) as WEIZHI2, 

  SUM(D_RE-D_WI) as WEIZHI1,
  SUM(M_INV) as M_INV,
  SUM(D_INV) as D_INV,
  SUM(AWIAT) as AWIAT

FROM TMP
UNION ALL 
SELECT
  '渠道',
   SUM(ALL_REG) as ALL_REG,
  SUM(M_REG) as M_REG,
  SUM(D_REG) as D_REG,
  SUM(ALL_FIRST) as ALL_FIRST,
  SUM(M_FIRST) as M_FIRST,
  SUM(D_FIRST) as D_FIRST,  
  
  
  SUM(M_FIRST_INV) as M_FIRST_INV,
  SUM(D_FIRST_INV) as D_FIRST_INV,
  SUM(M_RE) as WEIZHI4,

  SUM(M_RE-M_WI) as WEIZHI3,
  SUM(D_RE) as WEIZHI2, 

  SUM(D_RE-D_WI) as WEIZHI1,
  SUM(M_INV) as M_INV,
  SUM(D_INV) as D_INV,
  SUM(AWIAT) as AWIAT
FROM TMP
WHERE RESOURCE_KIND = 1

UNION ALL 
SELECT * FROM(
SELECT
  KIND,
   SUM(ALL_REG) as ALL_REG,
  SUM(M_REG) as M_REG,
  SUM(D_REG) as D_REG,
  SUM(ALL_FIRST) as ALL_FIRST,
  SUM(M_FIRST) as M_FIRST,
  SUM(D_FIRST) as D_FIRST,  
  
  
  SUM(M_FIRST_INV) as M_FIRST_INV,
  SUM(D_FIRST_INV) as D_FIRST_INV,
  SUM(M_RE) as WEIZHI4,

  SUM(M_RE-M_WI) as WEIZHI3,
  SUM(D_RE) as WEIZHI2, 

  SUM(D_RE-D_WI) as WEIZHI1,
  SUM(M_INV) as M_INV,
  SUM(D_INV) as D_INV,
  SUM(AWIAT) as AWIAT
FROM TMP
GROUP BY KIND,RANK
ORDER BY RANK
)
)
--${paixu}
