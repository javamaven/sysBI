<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="io.renren.dao.MarketChannelDao">

	<!-- 可根据自己的需求，是否要使用 -->
    <resultMap type="io.renren.entity.MarketChannelEntity" id="MarketChannelMap">
        <result property="statPeriod" column="STAT_PERIOD"/>
        <result property="channelHead" column="CHANNEL_HEAD"/>
        <result property="type" column="TYPE"/>
        <result property="channelName" column="CHANNEL_NAME"/>
        <result property="ctime" column="CTIME"/>
        <result property="actualCost" column="ACTUAL_COST"/>
        <result property="regCou" column="REG_COU"/>
        <result property="firstinvestCou" column="FIRSTINVEST_COU"/>
        <result property="firstinvestMoney" column="FIRSTINVEST_MONEY"/>
        <result property="firstinvestYMoney" column="FIRSTINVEST_Y_MONEY"/>
        <result property="invCou" column="INV_COU"/>
        <result property="invMoney" column="INV_MONEY"/>
        <result property="invYMoney" column="INV_Y_MONEY"/>
        <result property="ddzMoney" column="DDZ_MONEY"/>
        <result property="regCost" column="REG_COST"/>
        <result property="firstinvestCost" column="FIRSTINVEST_COST"/>
        <result property="avgFirstinvestMoney" column="AVG_FIRSTINVEST_MONEY"/>
        <result property="regInvConversion" column="REG_INV_CONVERSION"/>
        <result property="firstinvestRot" column="FIRSTINVEST_ROT"/>
        <result property="cumulativeRot" column="CUMULATIVE_ROT"/>
    </resultMap>


	<select id="queryList" resultType="io.renren.entity.MarketChannelEntity">
        DROP TABLE IF EXISTS TMP_dm_report_channel_data_01;
        DROP TABLE IF EXISTS TMP_dm_report_channel_data_02;

        CREATE TEMPORARY TABLE TMP_dm_report_channel_data_01
        SELECT
        STAT_PERIOD,
        IFNULL(CHANNEL_HEAD,'') AS CHANNEL_HEAD,
        IFNULL(TYPE,'') AS TYPE,
        IFNULL(CHANNEL_NAME,'') AS CHANNEL_NAME,
        IFNULL(ACTUAL_COST,0) AS ACTUAL_COST,
        IFNULL(REG_COU,0) AS REG_COU,
        IFNULL(FIRSTINVEST_COU,0) AS FIRSTINVEST_COU,
        IFNULL(FIRSTINVEST_MONEY,0) AS FIRSTINVEST_MONEY,
        IFNULL(FIRSTINVESTYEARAMOUNT,0) AS FIRSTINVEST_Y_MONEY,
        IFNULL(COUNT_USER,0) AS INV_COU,
        IFNULL(INV_MONEY,0) AS INV_MONEY,
        IFNULL(YEARAMOUNT,0) AS INV_Y_MONEY,
        IFNULL(DDZ_AMOUNT,0) AS DDZ_MONEY,
        FORMAT((IFNULL(ACTUAL_COST/REG_COU,0)),2) AS REG_COST,
        FORMAT((IFNULL(ACTUAL_COST/FIRSTINVEST_COU,0)),2) AS FIRSTINVEST_COST,
        FORMAT((IFNULL(FIRSTINVEST_MONEY/FIRSTINVEST_COU,0)),2) AS AVG_FIRSTINVEST_MONEY,
        FORMAT((IFNULL(FIRSTINVEST_COU/REG_COU,0)),2) AS REG_INV_CONVERSION,
        FORMAT((IFNULL(FIRSTINVEST_MONEY/ACTUAL_COST,0)),2) AS FIRSTINVEST_ROT,
        FORMAT((IFNULL(INV_MONEY/ACTUAL_COST,0)),2) AS CUMULATIVE_ROT
        FROM
        dm_report_channel_owner
        WHERE 1=1
        <if test="channelName!=null and channelName.size()!=0">
            AND CHANNEL_NAME IN
            <foreach item="channelName" collection="channelName" open="(" separator="," close=")">
                #{channelName}
            </foreach>
        </if>
        <if test="channelHead != null and channelHead.trim() != ''">
            AND CHANNEL_HEAD = #{channelHead}
        </if>
        <if test="reg_begindate != null and reg_begindate.trim() != '' and reg_enddate != null and reg_enddate.trim() != ''">
            AND STAT_PERIOD BETWEEN #{reg_begindate} AND #{reg_enddate}
        </if>
        ;

        CREATE TEMPORARY TABLE TMP_dm_report_channel_data_02
        SELECT *
        FROM TMP_dm_report_channel_data_01
        ;
        select *
        from  TMP_dm_report_channel_data_02
        ;
	</select>
	
 	<select id="queryTotal" resultType="int">
		select count(*)
        FROM
        TMP_dm_report_channel_data_01;
	</select>

    <select id="queryExport" resultType="io.renren.entity.MarketChannelEntity">

        select *
        from  TMP_dm_report_channel_data_02
        ;
    </select>




</mapper>